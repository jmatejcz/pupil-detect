
TWO CIRCLE UNPROJECTION

uprojection of an ellipse -> find a circle whose projection is a given ellipse.
przestrzen wszystkich możliwych projekcji koła źrenicy można przybliżyć jako stożek z kołem źrenicy w podstawie i ogniskową kamery w wierzchołku.
Wtedy nasza elipsa to przecięcie stożka z powierzchnią obrazu

To oznacza, że możemy zrekonstruować stożek z podstawą jako elipsa źrenicy, wtedy kołowe przecięcie tego stożka to będzie nasze koło elipsy (przeciecie znajdujemy metoda safaee-rad)
tą metodą otrzymujemy pozyjce źrenicy, wektor normalny 
natomiast nie znajac rozmiaru źrenicy nie jestesmy w stanie jednoznacznie okreslic jak daleko te koło jest od kamery 
Chwilowo zakładamy stały promień źrenicy(np. 2 mm).
Po tym powstają nam 2 rozwiązania o takich samych rozmiarach, symetryczne wzdłuż głownej osi ellipsy, z rozwiązania równania kwadratowego (p+, n+ r) , (p-, n-, r)
Na ten moment nie jesteśmy w stanie powiedzieć które jest poprawne.

MODELOWANIE

Modelujemy źrenice jako dysk styczny do sferycznej gałki ocznej, 
wtedy wektor wzorku to wektor normalny dysku

SPHERE CENTRE ESTIMATE

Mamy koło źrenicy dla każdego obrazka, chcemy teraz znaleźć taką sferę, która jest styczna do każdego koła
Nie mozemy tego znaleźć  w 3D ponieważ nie znam rzeczywistego promienia koła źrenicy i nie wiemy które z 2 rozwiązań jest dobre
Więc przeanalizujemy to w 2D przestrzeni obrazu.
2 wektory normalne z naszych 2 rozwiązań są w 2D równoległe więc możemy wziąc którykolowiek z nich.
Środek naszej gałki ocznej to będzie przęciecie wektorów normalnych naszych dysków (źrenic)
Linie te ze wzgledu na błędy i założenia nie będą się przecinac w jednym punkcie, wiec wybieramy najblższy wszystkim liniom
Dzieki temu mamy wspolrzedne x,y środka źrenicy c
Nie znamy współrzednej z wiec na razie ją fixujemy 

SPHERE RADIUS ESTIMATE

każdy wektor normalny źrenicy musi wskazywac kierunek od środka sfery n* (c-p) > 0, 
teraz możemy odrzucić jedno rozwiązania, którego wektor normalny wskazuje do środka sfery

można policzyc środek dysku stycznego do sfery , 
jako przecięcie lini (camera_vertex, p) i lini ze środka sfery do p (c, p)
liczymy punkt najbliższy obu liniom
R - promień sfery to średni dystans od środka sfery do środka źrenicy  mean(R = p-c)

CONSISTENT PUPIL ESTIMATE

teraz chcemy policzyć nowe koło źrenicy (p', n' ,r'), styczne do sfery oka 
gdzie 
p' = sp 
p'=c +Rn' 
r'/z' = r/z 
s znajdujemy jako s*p to przeciecie sfery z linią, potem wyliczamy n' i r'
Po tym wszystkim mamy jako taki model ruchy źenicy
